#!/bin/bash

# –°–∫—Ä–∏–ø—Ç –¥–ª—è –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –æ–∫—Ä—É–∂–µ–Ω–∏—è —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∏ SAMe

set -e  # –í—ã—Ö–æ–¥ –ø—Ä–∏ –æ—à–∏–±–∫–µ

# –¶–≤–µ—Ç–∞ –¥–ª—è –≤—ã–≤–æ–¥–∞
RED='\033[0;31m'
GREEN='\033[0;32m'
YELLOW='\033[1;33m'
BLUE='\033[0;34m'
NC='\033[0m' # No Color

echo -e "${BLUE}üöÄ –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –æ–∫—Ä—É–∂–µ–Ω–∏—è —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∏ SAMe...${NC}"

# –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞–ª–∏—á–∏—è Python
if ! command -v python3 &> /dev/null; then
    echo -e "${RED}‚ùå Python 3 –Ω–µ –Ω–∞–π–¥–µ–Ω. –£—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ Python 3.9+${NC}"
    exit 1
fi

# –ü—Ä–æ–≤–µ—Ä–∫–∞ –≤–µ—Ä—Å–∏–∏ Python
PYTHON_VERSION=$(python3 -c 'import sys; print(".".join(map(str, sys.version_info[:2])))')
REQUIRED_VERSION="3.9"

if [ "$(printf '%s\n' "$REQUIRED_VERSION" "$PYTHON_VERSION" | sort -V | head -n1)" != "$REQUIRED_VERSION" ]; then
    echo -e "${RED}‚ùå –¢—Ä–µ–±—É–µ—Ç—Å—è Python $REQUIRED_VERSION+, –Ω–∞–π–¥–µ–Ω $PYTHON_VERSION${NC}"
    exit 1
fi

echo -e "${GREEN}‚úÖ Python $PYTHON_VERSION –Ω–∞–π–¥–µ–Ω${NC}"

# –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞–ª–∏—á–∏—è Poetry
if ! command -v poetry &> /dev/null; then
    echo -e "${YELLOW}‚ö†Ô∏è  Poetry –Ω–µ –Ω–∞–π–¥–µ–Ω. –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º...${NC}"
    curl -sSL https://install.python-poetry.org | python3 -
    export PATH="$HOME/.local/bin:$PATH"
    
    if ! command -v poetry &> /dev/null; then
        echo -e "${RED}‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å —É—Å—Ç–∞–Ω–æ–≤–∏—Ç—å Poetry${NC}"
        exit 1
    fi
fi

echo -e "${GREEN}‚úÖ Poetry –Ω–∞–π–¥–µ–Ω${NC}"

# –£—Å—Ç–∞–Ω–æ–≤–∫–∞ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π
echo -e "${BLUE}üì¶ –£—Å—Ç–∞–Ω–æ–≤–∫–∞ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π...${NC}"
poetry install

# –°–æ–∑–¥–∞–Ω–∏–µ .env —Ñ–∞–π–ª–∞ –µ—Å–ª–∏ –µ–≥–æ –Ω–µ—Ç
if [ ! -f .env ]; then
    echo -e "${YELLOW}üìù –°–æ–∑–¥–∞–Ω–∏–µ .env —Ñ–∞–π–ª–∞...${NC}"
    cp .env.example .env
    echo -e "${GREEN}‚úÖ –§–∞–π–ª .env —Å–æ–∑–¥–∞–Ω –∏–∑ .env.example${NC}"
    echo -e "${YELLOW}‚ö†Ô∏è  –ù–µ –∑–∞–±—É–¥—å—Ç–µ –Ω–∞—Å—Ç—Ä–æ–∏—Ç—å –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –≤ .env —Ñ–∞–π–ª–µ${NC}"
fi

# –£—Å—Ç–∞–Ω–æ–≤–∫–∞ pre-commit —Ö—É–∫–æ–≤
echo -e "${BLUE}üîß –£—Å—Ç–∞–Ω–æ–≤–∫–∞ pre-commit —Ö—É–∫–æ–≤...${NC}"
poetry run pre-commit install
poetry run pre-commit install --hook-type commit-msg

# –°–æ–∑–¥–∞–Ω–∏–µ –Ω–µ–æ–±—Ö–æ–¥–∏–º—ã—Ö –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–π
echo -e "${BLUE}üìÅ –°–æ–∑–¥–∞–Ω–∏–µ –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–π...${NC}"
mkdir -p data/{input,processed,output} logs temp models/{configs,logs,models_pth}

# –£—Å—Ç–∞–Ω–æ–≤–∫–∞ SpaCy –º–æ–¥–µ–ª–∏
echo -e "${BLUE}üß† –£—Å—Ç–∞–Ω–æ–≤–∫–∞ SpaCy –º–æ–¥–µ–ª–∏ –¥–ª—è —Ä—É—Å—Å–∫–æ–≥–æ —è–∑—ã–∫–∞...${NC}"
poetry run python -m spacy download ru_core_news_lg

# –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å—Ç—Ä—É–∫—Ç—É—Ä—ã –ø—Ä–æ–µ–∫—Ç–∞
echo -e "${BLUE}üîç –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å—Ç—Ä—É–∫—Ç—É—Ä—ã –ø—Ä–æ–µ–∫—Ç–∞...${NC}"
poetry run python scripts/check_structure.py

# –ó–∞–ø—É—Å–∫ –ø–µ—Ä–≤–∏—á–Ω—ã—Ö –ø—Ä–æ–≤–µ—Ä–æ–∫
echo -e "${BLUE}üß™ –ó–∞–ø—É—Å–∫ –ø–µ—Ä–≤–∏—á–Ω—ã—Ö –ø—Ä–æ–≤–µ—Ä–æ–∫...${NC}"

echo -e "${BLUE}  - –§–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∫–æ–¥–∞...${NC}"
poetry run black src/ tests/ || echo -e "${YELLOW}‚ö†Ô∏è  –ù–∞–π–¥–µ–Ω—ã –ø—Ä–æ–±–ª–µ–º—ã —Å —Ñ–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ–º${NC}"

echo -e "${BLUE}  - –°–æ—Ä—Ç–∏—Ä–æ–≤–∫–∞ –∏–º–ø–æ—Ä—Ç–æ–≤...${NC}"
poetry run isort src/ tests/ || echo -e "${YELLOW}‚ö†Ô∏è  –ù–∞–π–¥–µ–Ω—ã –ø—Ä–æ–±–ª–µ–º—ã —Å –∏–º–ø–æ—Ä—Ç–∞–º–∏${NC}"

echo -e "${BLUE}  - –ü—Ä–æ–≤–µ—Ä–∫–∞ –ª–∏–Ω—Ç–µ—Ä–æ–º...${NC}"
poetry run flake8 src/ tests/ || echo -e "${YELLOW}‚ö†Ô∏è  –ù–∞–π–¥–µ–Ω—ã –ø—Ä–æ–±–ª–µ–º—ã —Å –∫–æ–¥–æ–º${NC}"

echo -e "${BLUE}  - –ü—Ä–æ–≤–µ—Ä–∫–∞ —Ç–∏–ø–æ–≤...${NC}"
poetry run mypy src/ || echo -e "${YELLOW}‚ö†Ô∏è  –ù–∞–π–¥–µ–Ω—ã –ø—Ä–æ–±–ª–µ–º—ã —Å —Ç–∏–ø–∞–º–∏${NC}"

echo -e "${BLUE}  - –ü—Ä–æ–≤–µ—Ä–∫–∞ –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç–∏...${NC}"
poetry run bandit -r src/ || echo -e "${YELLOW}‚ö†Ô∏è  –ù–∞–π–¥–µ–Ω—ã –ø—Ä–æ–±–ª–µ–º—ã —Å –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç—å—é${NC}"

# –ó–∞–ø—É—Å–∫ —Ç–µ—Å—Ç–æ–≤
echo -e "${BLUE}üß™ –ó–∞–ø—É—Å–∫ —Ç–µ—Å—Ç–æ–≤...${NC}"
if poetry run pytest tests/ --tb=short; then
    echo -e "${GREEN}‚úÖ –í—Å–µ —Ç–µ—Å—Ç—ã –ø—Ä–æ—à–ª–∏${NC}"
else
    echo -e "${YELLOW}‚ö†Ô∏è  –ù–µ–∫–æ—Ç–æ—Ä—ã–µ —Ç–µ—Å—Ç—ã –Ω–µ –ø—Ä–æ—à–ª–∏${NC}"
fi

echo -e "${GREEN}üéâ –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –æ–∫—Ä—É–∂–µ–Ω–∏—è —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∏ –∑–∞–≤–µ—Ä—à–µ–Ω–∞!${NC}"
echo -e "${BLUE}üìã –°–ª–µ–¥—É—é—â–∏–µ —à–∞–≥–∏:${NC}"
echo -e "  1. –ù–∞—Å—Ç—Ä–æ–π—Ç–µ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –≤ —Ñ–∞–π–ª–µ .env"
echo -e "  2. –ó–∞–ø—É—Å—Ç–∏—Ç–µ –±–∞–∑—É –¥–∞–Ω–Ω—ã—Ö: ${YELLOW}make docker-dev${NC}"
echo -e "  3. –ü—Ä–∏–º–µ–Ω–∏—Ç–µ –º–∏–≥—Ä–∞—Ü–∏–∏: ${YELLOW}make db-upgrade${NC}"
echo -e "  4. –ó–∞–ø—É—Å—Ç–∏—Ç–µ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ: ${YELLOW}make run${NC}"
echo -e "  5. –û—Ç–∫—Ä–æ–π—Ç–µ –¥–æ–∫—É–º–µ–Ω—Ç–∞—Ü–∏—é: ${YELLOW}make docs-serve${NC}"

echo -e "${BLUE}üîó –ü–æ–ª–µ–∑–Ω—ã–µ –∫–æ–º–∞–Ω–¥—ã:${NC}"
echo -e "  - ${YELLOW}make help${NC} - –ø–æ–∫–∞–∑–∞—Ç—å –≤—Å–µ –¥–æ—Å—Ç—É–ø–Ω—ã–µ –∫–æ–º–∞–Ω–¥—ã"
echo -e "  - ${YELLOW}make test${NC} - –∑–∞–ø—É—Å—Ç–∏—Ç—å —Ç–µ—Å—Ç—ã"
echo -e "  - ${YELLOW}make format${NC} - –æ—Ç—Ñ–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞—Ç—å –∫–æ–¥"
echo -e "  - ${YELLOW}make lint${NC} - –ø—Ä–æ–≤–µ—Ä–∏—Ç—å –∫–æ–¥ –ª–∏–Ω—Ç–µ—Ä–∞–º–∏"
echo -e "  - ${YELLOW}make demo${NC} - –∑–∞–ø—É—Å—Ç–∏—Ç—å –¥–µ–º–æ notebook"
